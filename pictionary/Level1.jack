class Level1
{
   function void l1()
   {var int i,j,key;
    var char x,y,z;
    var String solution;
    var String correct;
var int location1,location2,location3,location4,memAddress1,memAddress2,memAddress3,memAddress4 ;
let location2=100;
let memAddress2 = 16384+location2;
	do Memory.poke(memAddress2+0, 16382);
	do Memory.poke(memAddress2+32, 32766);
	do Memory.poke(memAddress2+64, -1);
	do Memory.poke(memAddress2+96, -1);
	do Memory.poke(memAddress2+128, -4);
	do Memory.poke(memAddress2+160, 32378);
	do Memory.poke(memAddress2+192, 7264);
	do Memory.poke(memAddress2+224, 264);
	do Memory.poke(memAddress2+256, 1025);
	do Memory.poke(memAddress2+288, -32440);
	do Memory.poke(memAddress2+320, 0);
	do Memory.poke(memAddress2+352, 72);
	do Memory.poke(memAddress2+384, 9216);
	do Memory.poke(memAddress2+416, 34);
	do Memory.poke(memAddress2+448, 256);
	do Memory.poke(memAddress2+480, 8192);
let location3=200;
let memAddress3 = 16384+location3;
	do Memory.poke(memAddress3+0, 480);
	do Memory.poke(memAddress3+32, 480);
	do Memory.poke(memAddress3+64, 480);
	do Memory.poke(memAddress3+96, 480);
	do Memory.poke(memAddress3+128, 480);
	do Memory.poke(memAddress3+160, 16383);
	do Memory.poke(memAddress3+192, 16383);
	do Memory.poke(memAddress3+224, 16383);
	do Memory.poke(memAddress3+256, 480);
	do Memory.poke(memAddress3+288, 480);
	do Memory.poke(memAddress3+320, 480);
	do Memory.poke(memAddress3+352, 480);
	do Memory.poke(memAddress3+384, 480);
	do Memory.poke(memAddress3+416, 0);
	do Memory.poke(memAddress3+448, 0);
	do Memory.poke(memAddress3+480, 0);

let location1=300;
let memAddress1 = 16384+location1;
	do Memory.poke(memAddress1+0, -8185);
	do Memory.poke(memAddress1+32, -4081);
	do Memory.poke(memAddress1+64, -10213);
	do Memory.poke(memAddress1+96, -13261);
	do Memory.poke(memAddress1+128, -14749);
	do Memory.poke(memAddress1+160, -15421);
	do Memory.poke(memAddress1+192, -15997);
	do Memory.poke(memAddress1+224, -15997);
	do Memory.poke(memAddress1+256, -15997);
	do Memory.poke(memAddress1+288, -15997);
	do Memory.poke(memAddress1+320, -15421);
	do Memory.poke(memAddress1+352, -14749);
	do Memory.poke(memAddress1+384, -13261);
	do Memory.poke(memAddress1+416, -10213);
	do Memory.poke(memAddress1+448, -4081);
	do Memory.poke(memAddress1+480, -16377);
let location4=400;
let memAddress4 = 16384+location4;
	do Memory.poke(memAddress4+0, 0);
	do Memory.poke(memAddress4+32, -1);
	do Memory.poke(memAddress4+64, -1);
	do Memory.poke(memAddress4+96, -1);
	do Memory.poke(memAddress4+128, -1);
	do Memory.poke(memAddress4+160, 0);
	do Memory.poke(memAddress4+192, 0);
	do Memory.poke(memAddress4+224, 0);
	do Memory.poke(memAddress4+256, 0);
	do Memory.poke(memAddress4+288, 0);
	do Memory.poke(memAddress4+320, -1);
	do Memory.poke(memAddress4+352, -1);
	do Memory.poke(memAddress4+384, -1);
	do Memory.poke(memAddress4+416, -1);
	do Memory.poke(memAddress4+448, 0);
	do Memory.poke(memAddress4+480, 0);
do Output.moveCursor(5,0);
 do Output.printString("GUESS THE WORD: ");
      
      let i = 0;

     let solution = "RAINBOW";
      let correct = String.new(7);
      
      while(i < 7)
      { let x=Keyboard.readChar();
         let correct = correct.appendChar(x);
         let i = i+1;
      }
 do Output.println();  
do Output.printString(correct);
 do Output.println();  
let j=0;
while(j<7){

if(~(solution.charAt(j)=correct.charAt(j))){
 do Output.printString("OOPS, TRY AGAIN!");
return;}
let j=j+1;
}
 do Output.printString("GOOD JOB");
do Sys.wait(5000);
do Genre.gen();
return;
}
}
